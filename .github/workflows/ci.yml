name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request: # 添加 pull_request 触发器
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置Java环境
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 缓存Maven依赖，加速构建
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 编译和单元测试 - 使用package而非install
      - name: Build and test
        run: mvn clean verify  # 这是最佳选择，后面有解释
        # 如果想在测试失败时看到详细日志:
        # run: mvn -B clean verify --no-transf


      # 代码质量检查示例
#      - name: Run SonarCloud
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Docker镜像构建
#      - name: Build Docker image
#        run: |
#          docker build -t myapp:${{ github.sha }} .

      # 存储镜像用于后续部署
#      - name: Save Docker image
#        uses: actions/upload-artifact@v3
#        with:
#          name: docker-image
#          path: |
#            saved-image.tar